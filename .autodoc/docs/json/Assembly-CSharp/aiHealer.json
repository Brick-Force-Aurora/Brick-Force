{
  "fileName": "aiHealer.cs",
  "filePath": "Assembly-CSharp\\aiHealer.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\aiHealer.cs",
  "summary": "The code provided is a class called `aiHealer` that extends the `MonAI` class. This class is responsible for managing the healing behavior of an AI character in the larger Brick-Force project.\n\nThe `aiHealer` class has several public variables that can be adjusted to customize the healing behavior. These variables include `healRange`, which determines the maximum distance at which the AI character can heal other characters, `incHp`, which represents the amount of health points that will be increased when healing, and `repeatTime`, which determines the time interval between each healing action.\n\nThe `aiHealer` class overrides two methods from the `MonAI` class: `ActiveHealerEff()` and `updateAreaHeal()`. \n\nThe `ActiveHealerEff()` method is responsible for activating the healing effect. It searches for a specific object named \"Dummy_mon_effect\" in the AI character's children objects and instantiates a copy of the `healerEff` object at the position and rotation of the found object. This method is likely called when the AI character is first spawned or when it needs to activate its healing ability.\n\nThe `updateAreaHeal()` method is responsible for performing the healing action. It first checks if the healing effect object (`effCopy`) exists. If it does, it searches for the \"Dummy_mon_effect\" object again and updates the position and rotation of the healing effect object to match the found object. \n\nNext, it checks if the AI character is the master character (controlled by the player). If it is, it increments the `dtHeal` variable by the time since the last frame. If `dtHeal` exceeds the `repeatTime` value, it performs the healing action.\n\nThe healing action involves sending a message to the `P2PManager` to notify other players of the healing action. It then searches for the \"Dummy_mon_effect\" object again and instantiates a new copy of the `healerEff` object at its position and rotation. \n\nFinally, it retrieves an array of all AI characters in the game and iterates over them. For each AI character within the `healRange`, it retrieves the corresponding `MonAI` class and calls its `ActiveHealEff()` method to activate the healing effect. It also increments the character's experience points (`Xp`) by the `incHp` value and sends a message to the `P2PManager` to notify other players of the updated health points.\n\nIn summary, the `aiHealer` class is responsible for managing the healing behavior of an AI character in the Brick-Force project. It activates and updates the healing effect object, performs the healing action at regular intervals, and notifies other players of the healing action and updated health points.",
  "questions": "1. What is the purpose of the `aiHealer` class?\n- The `aiHealer` class is responsible for healing other game objects within a certain range.\n\n2. What is the significance of the `healRange` variable?\n- The `healRange` variable determines the maximum distance at which the `aiHealer` can heal other game objects.\n\n3. What is the purpose of the `updateAreaHeal` method?\n- The `updateAreaHeal` method is responsible for updating the healing effect and healing nearby game objects within the specified range."
}