{
  "fileName": "PrjPosionBomb.cs",
  "filePath": "Assembly-CSharp\\PrjPosionBomb.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\PrjPosionBomb.cs",
  "summary": "The code provided is a class called `PrjPosionBomb` that extends the `Projectile` class. This class represents a poison bomb projectile in the larger Brick-Force project. \n\nThe `PrjPosionBomb` class has several properties and methods that define the behavior of the poison bomb projectile. \n\nThe properties include:\n- `smoke`: a reference to a smoke GameObject that will be instantiated when the bomb explodes.\n- `tail`: a reference to a tail GameObject that will be updated with the position of the bomb.\n- `radius`: the radius of the bomb's explosion.\n- `atkPow`: the attack power of the bomb.\n- `rigidity`: the rigidity of the bomb.\n- `weaponBy`: the weapon type of the bomb.\n- `weaponByForChild`: the weapon type for child bombs.\n- `durability`: the current durability of the bomb.\n- `durabilityMax`: the maximum durability of the bomb.\n- `colPoint`: the collision point of the bomb.\n\nThe methods in the class include:\n- `TailUpdate(Vector3 pos)`: updates the position of the tail GameObject to the specified position.\n- `CalcPowFrom(Vector3 position)`: calculates the attack power of the bomb based on its position relative to the target position.\n- `CheckMyself()`: checks if the bomb has hit the player and applies damage if necessary.\n- `CheckBoxmen()`: checks if the bomb has hit any boxmen (non-player characters) and applies damage if necessary.\n- `CheckMonster()`: checks if the bomb has hit any monsters and applies damage if necessary.\n- `CheckDestructibles()`: checks if the bomb has hit any destructible objects (bricks) and applies damage if necessary.\n- `Start()`: called when the bomb is instantiated, it sets the main texture of the bomb's mesh renderer to a texture from the UskManager if available.\n- `Kaboom()`: handles the explosion of the bomb, instantiating explosion and smoke GameObjects, applying damage to nearby objects, and destroying the bomb.\n- `Update()`: called every frame, it tracks the bomb's movement and sends updates to the server.\n- `FixedUpdate()`: called every fixed frame, it adds torque to the bomb's rigidbody to simulate rotation.\n- `OnCollisionEnter(Collision col)`: called when the bomb collides with another object, it handles the explosion of the bomb.\n\nOverall, this code defines the behavior of a poison bomb projectile in the Brick-Force project. It handles the movement, collision, and explosion of the bomb, as well as applying damage to nearby objects such as players, boxmen, monsters, and destructible objects.",
  "questions": "1. What is the purpose of the `CheckMyself()` method?\n- The `CheckMyself()` method is used to check if the projectile has hit the player character and apply damage if necessary.\n\n2. What does the `CheckBoxmen()` method do?\n- The `CheckBoxmen()` method checks for any nearby enemy players or objects and applies damage to them if necessary.\n\n3. What is the purpose of the `CheckDestructibles()` method?\n- The `CheckDestructibles()` method checks for any nearby destructible objects and applies damage to them if necessary."
}