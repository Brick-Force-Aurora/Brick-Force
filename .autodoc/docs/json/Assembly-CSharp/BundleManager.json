{
  "fileName": "BundleManager.cs",
  "filePath": "Assembly-CSharp\\BundleManager.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\BundleManager.cs",
  "summary": "The `BundleManager` class is responsible for managing bundles of items in the Brick-Force project. It provides methods for packing and unpacking items into bundles, as well as loading and clearing the bundle data.\n\nThe class has a private dictionary `dic` that stores the bundle data. Each bundle is represented by a `BundleDesc` object, which contains information about the items packed in the bundle. The `dic` dictionary uses the bundle name as the key and the `BundleDesc` object as the value.\n\nThe `BundleManager` class is implemented as a singleton, meaning that there can only be one instance of it in the project. The `Instance` property provides access to the singleton instance.\n\nThe `Unpack` method takes a bundle name as input and returns an array of `BundleUnit` objects, which represent the unpacked items in the bundle. It checks if the bundle exists in the `dic` dictionary and calls the `Unpack` method of the corresponding `BundleDesc` object to retrieve the unpacked items.\n\nThe `Pack` method takes a bundle name, item code, and an option as input. It converts the bundle and item codes to lowercase and retrieves the `TItem` object corresponding to the item code from the `TItemManager` class. If the `TItem` object exists, it checks if the bundle already exists in the `dic` dictionary. If not, it adds a new `BundleDesc` object to the dictionary. It then calls the `Pack` method of the `BundleDesc` object to pack the item into the bundle.\n\nThe `Clear` method clears the `dic` dictionary, removing all bundle data.\n\nThe `Remove` method takes a bundle name as input and removes the corresponding `BundleDesc` object from the `dic` dictionary.\n\nThe `Awake` method is called when the `BundleManager` object is created. It sets the `dic` dictionary to a new instance of `Dictionary<string, BundleDesc>` and ensures that the object is not destroyed when a new scene is loaded.\n\nThe `LoadFromWWW` method is a coroutine that loads bundle data from a remote server using the `WWW` class. It constructs the URL for the bundle data file and creates a `WWW` object to download the file. It then reads the downloaded data using a `MemoryStream` and a `BinaryReader`, and passes it to a `CSVLoader` object to parse the data. If the data is successfully parsed, it calls the `ParseData` method to populate the `dic` dictionary with the bundle data.\n\nThe `LoadFromLocalFileSystem` method loads bundle data from the local file system. It constructs the path to the bundle data file and checks if the file exists. If the file does not exist, it returns false. Otherwise, it creates a `CSVLoader` object and attempts to load the data from the file. If the data cannot be loaded, it returns false. If the data is successfully loaded, it checks the platform and saves the data in a secured format if the platform is the Windows editor or if the secured save fails. It then calls the `ParseData` method to populate the `dic` dictionary with the bundle data.\n\nThe `ParseData` method takes a `CSVLoader` object as input and iterates over each row in the data. It reads the bundle name, item code, and option from the data and converts the item code to lowercase. It then calls the `Pack` method to pack the item into the bundle.\n\nThe `Load` method is called to load the bundle data. It first clears the `dic` dictionary. It then checks the project's build options to determine if the shop text should be loaded. If the shop text should not be loaded and the application is not running in the editor, it sets the `isLoaded` flag to true. If the application is a web player, it starts the `LoadFromWWW` coroutine. Otherwise, it calls the `LoadFromLocalFileSystem` method.",
  "questions": "1. What is the purpose of the `BundleManager` class?\n- The `BundleManager` class is responsible for managing bundles and their contents.\n\n2. What is the purpose of the `Unpack` method?\n- The `Unpack` method is used to retrieve the contents of a specific bundle.\n\n3. How does the `Load` method determine whether to load data from a local file system or from a web server?\n- The `Load` method checks the `loadShopTxt` property and the application platform to determine whether to load data from a local file system or from a web server."
}