{
  "fileName": "AutoLogout.cs",
  "filePath": "Assembly-CSharp\\AutoLogout.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\AutoLogout.cs",
  "summary": "The code provided is a script called \"AutoLogout\" in the Brick-Force project. This script is responsible for handling the automatic logout functionality in the game. \n\nThe script starts by declaring a private Texture2D variable called \"bg\" which is used to store the background texture for the logout screen. It also declares private string variables called \"token\" and \"tokens\" which are used to store login tokens.\n\nThe Awake() method is empty and does not contain any code.\n\nThe Start() method calls the ResetSingletons() method of the BuildOption.Instance object. This method is responsible for resetting all the singleton instances in the game.\n\nThe Update() method is empty and does not contain any code.\n\nThe OnGUI() method is responsible for drawing the logout screen on the game's user interface. It sets the GUI skin to the one obtained from the GUISkinFinder.Instance object. It also disables the GUI if a modal dialog is currently being displayed. It then draws the background texture on the screen and displays a text label using the LabelUtil.TextOut() method.\n\nThe Relogin() method is called when the player needs to re-login after being automatically logged out. It takes a string parameter called \"parameters\" which contains the login information. The method first checks if the game is running in the \"Runup\" build option. If it is, it extracts the login tokens from the parameters using the CommandInterpreter.ExtractValueFromParameterByRunup() method. It then sets the AutoLogin property of the MyInfoManager.Instance object to \"RUNUP\" and creates a new SockTcp object for the CSNetManager.Instance.SwitchAfter property. It then opens a connection to the RoundRobinIp and RoundRobinPort using the Open() method of the CSNetManager.Instance.SwitchAfter object. If the connection is successful, it closes the current connection. If the game is not running in the \"Runup\" build option, it checks if the game is running in the \"Netmarble\" build option. If it is, it sets the AutoLogin property of the MyInfoManager.Instance object to \"NETMARBLE\" and performs the same connection logic as before. If the game is not running in either the \"Runup\" or \"Netmarble\" build options, it extracts the login token and site code from the parameters using the CommandInterpreter.ExtractValueFromParameter() method. It then sets the AutoLogin property of the MyInfoManager.Instance object to \"INFERNUM\" and performs the same connection logic as before. \n\nThe OnRoundRobin() method is responsible for opening a connection to the BfServer and BfPort using the Open() method of the CSNetManager.Instance.SwitchAfter object. If the connection is successful, it closes the current connection.\n\nThe OnServiceFail() method is empty and does not contain any code.\n\nThe OnSeed() method is responsible for sending the appropriate auto login request to the server based on the AutoLogin property of the MyInfoManager.Instance object. It sends the login token and build version information to the server using the SendCS_AUTO_LOGIN_REQ() method of the CSNetManager.Instance.Sock object.\n\nThe OnLoginFail() method is empty and does not contain any code.\n\nIn summary, this script handles the automatic logout functionality in the game. It provides methods for re-logging in the player after being automatically logged out and handles the connection logic with the server. The OnGUI() method is responsible for drawing the logout screen on the game's user interface. The Relogin() method is called when the player needs to re-login and it determines the appropriate login method based on the build options. The OnRoundRobin() method is responsible for opening a connection to the server. The OnSeed() method sends the auto login request to the server.",
  "questions": "1. What is the purpose of the `Relogin` method and how is it used?\n- The `Relogin` method is used to handle different login scenarios based on the value of `BuildOption.Instance.IsRunup` and `BuildOption.Instance.IsNetmarble`. It sets the `AutoLogin` property of `MyInfoManager.Instance` and opens a new `SockTcp` connection if necessary.\n\n2. What is the purpose of the `OnRoundRobin` method and when is it called?\n- The `OnRoundRobin` method is called to open a new `SockTcp` connection to the Brick-Force server specified by `CSNetManager.Instance.BfServer` and `CSNetManager.Instance.BfPort`. It is likely called when a round-robin connection is needed.\n\n3. What is the purpose of the `OnSeed` method and what actions does it perform?\n- The `OnSeed` method sends different types of login requests to the server based on the value of `MyInfoManager.Instance.AutoLogin`. It uses the `CSNetManager.Instance.Sock` object to send the requests with appropriate parameters."
}