{
  "fileName": "ConfigGUI.cs",
  "filePath": "Assembly-CSharp\\_Emulator\\GUI\\ConfigGUI.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\_Emulator\\GUI\\ConfigGUI.cs",
  "summary": "The code provided is a part of the Brick-Force project and is located in the `ConfigGUI` class. This class is responsible for creating and managing a graphical user interface (GUI) window that allows the user to configure various settings for the game.\n\nThe `ConfigGUI` class extends the `MonoBehaviour` class from the Unity engine, which means it can be attached to a game object in the scene and respond to events such as `Update` and `OnGUI`.\n\nThe `ConfigGUI` class has a few member variables. The `configGUIRect` variable is a `Rect` object that defines the position and size of the GUI window. The `hidden` variable is a boolean flag that determines whether the GUI window should be hidden or shown.\n\nThe `Update` method is called every frame and checks if the F7 key is pressed. If it is, the `hidden` flag is toggled, which hides or shows the GUI window accordingly. \n\nThe `OnGUI` method is called whenever the GUI needs to be rendered. If the `hidden` flag is false, the `GUILayout.Window` method is called to create a GUI window with the title \"Config\" and the ID 104. The `ConfigGUIWindow` method is then called to draw the contents of the GUI window.\n\nThe `ConfigGUIWindow` method contains various GUI elements such as buttons, labels, sliders, and toggle switches. These elements allow the user to save and load configurations, adjust the axis ratio and crosshair hue, and toggle various settings related to client connections and debugging.\n\nFor example, the code `Config.instance.axisRatio = GUILayout.HorizontalSlider(Config.instance.axisRatio, 1f, 2.25f);` creates a horizontal slider that allows the user to adjust the `axisRatio` property of the `Config` class. The current value of `axisRatio` is displayed as a label next to the slider.\n\nOverall, the `ConfigGUI` class provides a user-friendly way for players to customize their game settings. It is an important component of the larger Brick-Force project as it allows players to tailor their gameplay experience to their preferences.",
  "questions": "1. What is the purpose of the `ConfigGUI` class?\n- The `ConfigGUI` class is responsible for handling the GUI window for configuring various settings.\n\n2. What does the `Update` method do?\n- The `Update` method checks if the F7 key is pressed and toggles the `hidden` variable accordingly. It also applies the axis ratio and crosshair hue settings from the `Config` instance.\n\n3. What happens when the \"Save\" button is clicked in the GUI window?\n- When the \"Save\" button is clicked, the `SaveConfigToDisk` method of the `Config` instance is called to save the configuration to disk."
}