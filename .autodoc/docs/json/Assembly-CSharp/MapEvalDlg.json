{
  "fileName": "MapEvalDlg.cs",
  "filePath": "Assembly-CSharp\\MapEvalDlg.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\MapEvalDlg.cs",
  "summary": "The code provided is a class called `MapEvalDlg` that extends the `Dialog` class. This class is responsible for displaying a dialog box that allows the user to evaluate a map in the game. The purpose of this code is to provide a user interface for the player to input their evaluation of a map and submit it to the server.\n\nThe `MapEvalDlg` class has several member variables that define the position and size of various UI elements in the dialog box. These variables include `crdOutline`, `crdGood`, `crdBad`, `crdLineEval`, `crdEvalFld`, `crdWarn1`, `crdWarn2`, `strEval`, `maxEvalLength`, `isGood`, `isBad`, and `playmap`.\n\nThe `Start()` method sets the `id` of the dialog box to a specific value from the `DialogManager` class.\n\nThe `OnPopup()` method sets the size and position of the dialog box based on the screen size.\n\nThe `InitDialog()` method initializes the member variables related to the evaluation of the map.\n\nThe `DoDialog()` method is responsible for rendering the UI elements and handling user input. It first sets the GUI skin to a specific skin from the `GUISkinFinder` class. It then renders the title of the dialog box and a blue outline box. It calls the `DoGoodBad()` method to render the \"good\" and \"bad\" toggle buttons and their labels. It renders a text field for the user to input their evaluation of the map. It also renders two warning labels. Finally, it renders two buttons - one for submitting the evaluation and one for closing the dialog box.\n\nThe `DoGoodBad()` method is responsible for rendering the \"good\" and \"bad\" toggle buttons and their labels. It also handles the logic for ensuring that only one of the buttons can be selected at a time.\n\nOverall, this code provides a user interface for the player to evaluate a map in the game and submit their evaluation to the server. It handles rendering the UI elements and handling user input for the evaluation process.",
  "questions": "1. What is the purpose of the `MapEvalDlg` class?\n- The `MapEvalDlg` class is a dialog class that handles the evaluation of a map in the game.\n2. What is the significance of the `strEval` variable?\n- The `strEval` variable stores the evaluation text provided by the player for the map.\n3. What happens when the player clicks the \"DO_EVAL\" button?\n- If the player has selected either the \"Good\" or \"Bad\" option and provided an evaluation text, the `CSNetManager` sends a map evaluation request to the server."
}