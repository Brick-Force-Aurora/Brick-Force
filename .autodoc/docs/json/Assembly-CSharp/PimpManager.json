{
  "fileName": "PimpManager.cs",
  "filePath": "Assembly-CSharp\\PimpManager.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\PimpManager.cs",
  "summary": "The `PimpManager` class in the Brick-Force project is responsible for managing and storing data related to the \"pimp\" values of various categories, properties, and levels. The purpose of this code is to load and parse a CSV file containing the pimp values and store them in a multi-dimensional array.\n\nThe `PimpManager` class is a singleton, meaning that there can only be one instance of it in the project. The `Instance` property ensures that only one instance of the `PimpManager` class is created and provides a way to access that instance from other parts of the project.\n\nThe `Start` method initializes the `pimpVals` array with a size of 13x13x10 and then calls the `Load` method to load the pimp values from a file.\n\nThe `Load` method checks if the `loadShopTxt` flag is set to true in the `BuildOption` class. If it is true, it checks if the game is running in a web player or not. If it is running in a web player, it starts a coroutine called `LoadFromWWW` to download the pimp values from a specified URL. If it is not running in a web player, it calls the `LoadFromLocalFileSystem` method to load the pimp values from a local file.\n\nThe `LoadFromWWW` method uses the `WWW` class to download the pimp values file from a specified URL. It then reads the downloaded file using a `BinaryReader` and passes it to a `CSVLoader` class to parse the CSV data. If the parsing is successful, it calls the `ParsePimp` method to update the `pimpVals` array with the parsed values.\n\nThe `LoadFromLocalFileSystem` method checks if the \"Resources\" directory exists in the project's data path. If it does not exist, it returns false. It then constructs the path to the pimp values file and uses a `CSVLoader` class to load and parse the CSV data. If the loading is successful, it saves the parsed data to the same file in a secured format. Finally, it calls the `ParsePimp` method to update the `pimpVals` array with the parsed values.\n\nThe `ParsePimp` method iterates over each row in the parsed CSV data and extracts the category, property, level, and value information. It trims and converts the extracted values to the appropriate data types and then calls the `updateValue` method to update the corresponding element in the `pimpVals` array.\n\nOverall, the `PimpManager` class provides functionality to load and store pimp values from a CSV file. It can be used in the larger Brick-Force project to manage and access these values for various game mechanics and systems. For example, it could be used to determine the strength or effectiveness of certain items or abilities based on their pimp values.",
  "questions": "1. What is the purpose of the `PimpManager` class?\n- The `PimpManager` class is responsible for managing and updating values related to a pimp system.\n\n2. What is the significance of the `Load()` method?\n- The `Load()` method is responsible for loading data from a file or a web server, depending on the configuration.\n\n3. What is the purpose of the `ParsePimp()` method?\n- The `ParsePimp()` method is responsible for parsing the loaded data and updating the values in the `pimpVals` array."
}