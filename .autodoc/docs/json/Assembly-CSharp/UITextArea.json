{
  "fileName": "UITextArea.cs",
  "filePath": "Assembly-CSharp\\UITextArea.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\UITextArea.cs",
  "summary": "The code provided is a class called `UITextArea` that extends the `UIBase` class. It is used to create a text area UI element in a larger project called Brick-Force. \n\nThe `UITextArea` class has several properties and methods that allow for the customization and functionality of the text area. \n\nThe `area` property is a `Vector2` that represents the size of the text area. \n\nThe `controlName` property is a string that is used to set the control name for the text area. This is important for identifying and manipulating the text area in other parts of the project. \n\nThe `maxTextLength` property is an integer that represents the maximum number of characters allowed in the text area. \n\nThe `deleteSpace` property is a boolean that determines whether or not spaces should be deleted from the input text. \n\nThe `inputText` property is a string that holds the current text input in the text area. \n\nThe `Draw` method is an override of the `Draw` method from the `UIBase` class. It is responsible for rendering the text area on the screen. It first checks if the text area should be drawn by checking the `isDraw` property. If it is not set to true, the method returns false. Otherwise, it sets the control name for the text area using the `GUI.SetNextControlName` method. It then renders the text area using the `GUI.TextArea` method, passing in the position, size, current input text, and maximum text length. If the input text exceeds the maximum text length, it reverts back to the previous text. Finally, the method returns false.\n\nThe `GetInputText` method is used to retrieve the input text from the text area. It first removes any tabs from the input text using the `Replace` method. If the `deleteSpace` property is set to true, it also removes any spaces from the input text. It then returns the modified input text.\n\nThe `ResetText` method is used to reset the input text to an empty string.\n\nOverall, this code provides the functionality to create and manipulate a text area UI element in the Brick-Force project. It allows for customization of the text area's size, maximum text length, and control name. It also provides methods to retrieve the input text and reset the text area.",
  "questions": "1. **What is the purpose of the `UITextArea` class?**\nThe `UITextArea` class is a subclass of `UIBase` and is used to create a text area UI element in the game.\n\n2. **What does the `Draw` method do?**\nThe `Draw` method is responsible for rendering the text area UI element on the screen. It returns a boolean value indicating whether the element was successfully drawn.\n\n3. **What does the `GetInputText` method do?**\nThe `GetInputText` method returns the input text from the text area, after removing any tabs and spaces if specified."
}