{
  "fileName": "MapEditor.cs",
  "filePath": "Assembly-CSharp\\MapEditor.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\MapEditor.cs",
  "summary": "The `MapEditor` class is a script that is part of the Brick-Force project. It is responsible for managing the map editing functionality within the game. \n\nThe `MapEditor` class has several member variables, including `guiDepth`, `authMark`, `editMark`, `deltaTime`, `delayLoad`, `battleChat`, `localController`, `bLoaded`, `loadPlayherList`, `waitBoxWidth`, and `waitBoxHeight`. These variables are used to store various data and settings related to the map editor.\n\nThe `Start()` method is called when the script is first initialized. It performs several initialization tasks, such as clearing dropped weapons, applying audio sources, and initializing the first-person perspective. It also initializes the `battleChat` component and calls the `OnStart()` method of the `BrickManManager` instance.\n\nThe `Awake()` method is empty and does not perform any actions.\n\nThe `StartLoad()` method is called to start loading the map. It first calls `GC.Collect()` to perform garbage collection, then creates a new `UserMap` instance and sends a cache brick request to the server using the `CSNetManager` instance.\n\nThe `OnGUI()` method is responsible for rendering the graphical user interface (GUI) elements related to the map editor. It checks if the map has been loaded (`bLoaded`) and if the GUI is enabled (`MyInfoManager.Instance.isGuiOn`). If both conditions are true, it sets the GUI skin, depth, and enables GUI drawing. It then draws two textures (`authMark` and `editMark`) at specific positions on the screen.\n\nThe `InitializeFirstPerson()` method is called to initialize the first-person perspective. It first creates an array of usables, then finds the game object with the name \"Me\". If the game object is found, it gets the `EquipCoordinator` component and initializes it with the usables array. It also gets the `LocalController` component.\n\nThe `OnLoadComplete()` method is called when the map loading is complete. It sends a resume room request to the server using the `CSNetManager` instance, spawns the local player at a random spawn position, sets `bLoaded` to true, and shows a map edit guide dialog if it has not been disabled.\n\nThe `ResetGameStuff()` method is called to reset game-related data and settings using the `MyInfoManager` instance.\n\nThe `OnDisable()` method is called when the script is disabled. If the application is still loading a level, it resets game-related stuff, unlocks the cursor, clears the user map slot, and clears the brick manager.\n\nThe `Update()` method is called every frame. It checks if the connecting component is showing and sets a flag accordingly. It then locks the cursor based on various conditions, such as not loading a level, not showing the menu, not chatting, not showing a modal dialog, and not showing the connecting component. It also handles delay loading and checks for input to open the main menu or map edit authority dialog.\n\nThe `AddLoadPlayer()` and `RemoveLoadPlayer()` methods are used to add or remove players from the `loadPlayherList` list.\n\nOverall, the `MapEditor` class is responsible for managing the map editing functionality within the game. It handles initialization, loading, GUI rendering, input handling, and player management.",
  "questions": "1. What is the purpose of the `StartLoad()` method?\n- The `StartLoad()` method is responsible for initializing the user map and sending a cache brick request to the server.\n\n2. What does the `OnLoadComplete()` method do?\n- The `OnLoadComplete()` method is called when the loading of the map is complete. It sends a resume room request to the server, spawns the local player, and displays a map edit guide dialog if necessary.\n\n3. What is the purpose of the `AddLoadPlayer()` and `RemoveLoadPlayer()` methods?\n- The `AddLoadPlayer()` and `RemoveLoadPlayer()` methods are used to add or remove player sequences from the `loadPlayerList` list, which keeps track of players who are currently loading."
}