{
  "fileName": "RegMap.cs",
  "filePath": "Assembly-CSharp\\RegMap.cs",
  "url": "https://github.com/TieHaxJan/Brick-Force/Assembly-CSharp\\RegMap.cs",
  "summary": "The code provided is a class called `RegMap` that represents a registered map in the Brick-Force project. This class is responsible for storing and managing various properties and behaviors of a map.\n\nThe `RegMap` class has several private fields, including `latestFileVer`, `ver`, `map`, `developer`, `alias`, `regDate`, `modeMask`, `release`, `latestRelease`, `Rank`, `RankChg`, `tagMask`, `thumbnail`, `clanMatchable`, `officialMap`, `blocked`, `likes`, `disLikes`, `downloadCount`, and `downloadFee`. These fields store information such as the map's version, developer, release information, thumbnail image, and various statistics.\n\nThe class provides public properties and methods to access and modify these fields. For example, the `Developer` property allows getting and setting the developer's name, the `Thumbnail` property returns the map's thumbnail image, and the `IsPlayableAt` method checks if the map is playable in a specific room type and channel mode.\n\nThe class also includes methods for saving and loading map data to and from a file. The `Save` method writes the map's properties to a binary file, including the map's version, developer, alias, release date, thumbnail image, and other relevant information. The `Load` method reads the map's properties from a file and initializes the corresponding fields.\n\nAdditionally, the class includes a `IsAbuseMap` method that checks if the map has the abuse tag set.\n\nOverall, the `RegMap` class provides a way to store and manage information about registered maps in the Brick-Force project. It allows developers to access and modify map properties, save and load map data, and perform various checks and operations related to map functionality.",
  "questions": "1. **Question:** What is the purpose of the `RegMap` class?\n   - **Answer:** The `RegMap` class represents a registered map in the Brick-Force project and stores various properties and methods related to the map.\n\n2. **Question:** How are the `likes`, `disLikes`, `downloadCount`, and `downloadFee` properties used in the code?\n   - **Answer:** These properties are used to keep track of the number of likes, dislikes, download count, and download fee associated with the map. They can be accessed and modified through their respective getter and setter methods.\n\n3. **Question:** What is the purpose of the `Save` and `Load` methods in the `RegMap` class?\n   - **Answer:** The `Save` method is used to save the `RegMap` object to a file, while the `Load` method is used to load a `RegMap` object from a file. These methods allow for persistence of map data."
}